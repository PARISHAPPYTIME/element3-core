import{r as t,w as e,o as n,a as i,h as r,S as a,b as o,c as l,d,e as u,f as s,B as c,g as f,t as h,i as m,j as g,k as p,l as b,m as S}from"./vendor.4f6f7efc.js";var x={name:"webgl-renderer",props:{width:String,height:String,indicesCount:{default:()=>5},indicesStart:{default:()=>0},iTime:{},iWidth:{},iHeight:{}},setup(r){const a=t(null);let o,l;return e((()=>{o&&l&&o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),n((()=>{o=a.value.getContext("webgl");var t=o.createShader(o.VERTEX_SHADER);o.shaderSource(t,"attribute vec4 a_Position;\nvoid main(){\n    gl_Position=a_Position;\n}\n"),o.compileShader(t);var e=o.createShader(o.FRAGMENT_SHADER);o.shaderSource(e,"precision mediump float;\n\nuniform float iTime;\nuniform float iWidth;\nuniform float iHeight;\n\nvec2 u_CanvasSize=vec2(iWidth,iHeight);\nvec2 center = u_CanvasSize / 2.0;\nfloat len1 = length(center);\nfloat pi = radians(360.0) / 2.0;\n\n\n//渐变\nfloat texture1(float x) {\n  float a = x / u_CanvasSize.x;\n  float b = radians(360.0) * 5.0 * a;\n  return (sin(b) + 1.0) / 2.0;\n}\n\n//水平拉丝\nfloat texture2(vec2 v) {\n  vec2 a = vec2(0.0, 1.0);\n  float n = dot(v, a);\n  return fract(tan(n) * 10000.0);\n}\n\n//杂色\nfloat texture3(vec2 v) {\n  vec2 a = vec2(0.1234, 0.5678);\n  float n = dot(v, a);\n  return fract(tan(n) * 10000.0);\n}\n\n//比例尺\nfloat scaler(float ax, float ay, float bx, float by, float x) {\n  float x1 = bx - ax;\n  float y1 = by - ay;\n  float k = y1 / x1;\n  float b = ay - ax * k;\n  return k * x + b;\n}\n\n\n\nvoid main(){\n  //极坐标系转二维直角坐标系\n  vec2 p = gl_FragCoord.xy - center;\n  float len2 = length(p);\n  float ang = atan(p.y, p.x);\n  float x = scaler(-pi, 0.0, pi, u_CanvasSize.x, ang);\n  float y = (len2 / len1) * u_CanvasSize.y;\n\n  //渐变\n  float f1 = texture1(x);\n  f1 = 0.65 * f1 + 0.35;\n\n  //拉丝\n  float f2 = texture2(vec2(int(x), int(y)));\n  f2 = clamp(f2, 0.75, 0.8);\n\n  //杂色\n  float f3 = texture3(gl_FragCoord.xy);\n\n  //复合颜色\n  float f = (f1 * f2 + f3 * 0.07) * 1.2;\n\n  \n  //平行光方向\n  vec2 lightDir1 = normalize(vec2(0.5, -1));\n  vec2 lightDir2 = lightDir1 * -1.0;\n\n  //片元和光线的夹角\n  float cosAng1 = (dot(normalize(p), lightDir1) + 1.0) / 1.5 + 0.3;\n  //cosAng1*=cosAng1/2.0;\n  float cosAng2 = (dot(normalize(p), lightDir2) + 1.0) / 4.0 + 0.2;\n  float cosAng3 = (dot(normalize(p), lightDir2) + 1.0) / 2.0 + 0.3;\n  cosAng3 *= cosAng3;\n  float cosAng4 = (dot(normalize(p), lightDir1) + 1.0) / 2.0 + 0.3;\n\n  //扩展1\n  float expand1=2.0;\n  float expand2=4.0;\n  float expand3=2.0;\n  float expand4=3.0;\n\n  //初始半径\n  float r = center.y-expand1-expand2-expand3-expand4;\n\n  float r1 = r + expand1;\n  float r2 = r1 + expand2;\n  float r3 = r2 + expand3;\n\n  if(len2 < r) {\n    gl_FragColor = vec4(vec3(f), 1);\n  } else if(len2 >= r && len2 < r1) {\n    f *= cosAng1;\n  } else if(len2 >= r1 && len2 < r2) {\n    f *= cosAng2;\n  } else if(len2 >= r2 && len2 < r3) {\n    f *= cosAng3;\n  }\n\n  gl_FragColor = vec4(vec3(f), 1);\n     \n}"),o.compileShader(e),l=o.createProgram(),o.attachShader(l,t),o.attachShader(l,e),o.linkProgram(l),o.useProgram(l);var n=o.getAttribLocation(l,"a_PointSize");o.vertexAttrib1f(n,30);var i=o.createBuffer();o.bindBuffer(o.ARRAY_BUFFER,i);var d=new Float32Array([-1,-1,-1,1,1,1,1,-1,-1,-1]);o.bufferData(o.ARRAY_BUFFER,d,o.STATIC_DRAW);var u=o.getAttribLocation(l,"a_Position");o.vertexAttribPointer(u,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(u),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let s=o.getUniformLocation(l,"iTime");o.uniform1f(s,Number(r.iTime)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let c=o.getUniformLocation(l,"iWidth");o.uniform1f(c,Number(r.iWidth)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let f=o.getUniformLocation(l,"iHeight");o.uniform1f(f,Number(r.iHeight)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),i((()=>r.iTime),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iTime");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iWidth),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iWidth");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iHeight),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iHeight");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),{canvas:a}},render:function(){return r("canvas",{ref:"canvas",width:this.$props.width,height:this.$props.height})}};const v={components:{E3Switch:a,draw:x},setup(){const e=t(!1);return{buttonWidth:t(100),buttonHeight:t(100),backgroundStyle:{background:"linear-gradient(#333, #666)",width:"70px",height:"44px",borderRadius:"25px",border:"2px solid #333"},enabled:e,buttonStyle:{width:"40px",height:"40px",transform:"translate(0px,0px)",borderRadius:"50%",position:"absolute",boxShadow:"0px 3px 4px #000",transition:"all .2s ease-in"},buttonEnterStyle:{width:"40px",height:"40px",transform:"translate(30px,0px)",borderRadius:"50%",position:"absolute",boxShadow:"0px 3px 4px #000",transition:"all .2s ease-in"}}}};v.render=function(t,e,n,i,r,a){const c=o("draw"),f=o("E3Switch");return l(),d(f,{modelValue:i.enabled,"onUpdate:modelValue":e[1]||(e[1]=t=>i.enabled=t),class:"\n    relative \n      focus:outline-none\n    "},{default:u((()=>[s(c,{width:"100",height:"100",iTime:0,iWidth:i.buttonWidth,iHeight:i.buttonHeight,style:i.enabled?i.buttonEnterStyle:i.buttonStyle},null,8,["iWidth","iHeight","style"]),s("div",{style:i.backgroundStyle},null,4)])),_:1},8,["modelValue"])};const A={components:{E3Button:c,draw:{name:"webgl-renderer",props:{width:String,height:String,indicesCount:{default:()=>5},indicesStart:{default:()=>0},m1:{},m2:{},iWidth:{},iHeight:{},r:{},g:{},b:{}},setup(r){const a=t(null);let o,l;return e((()=>{o&&l&&o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),n((()=>{o=a.value.getContext("webgl");var t=o.createShader(o.VERTEX_SHADER);o.shaderSource(t,"attribute vec4 a_Position;\nvoid main(){\n    gl_Position=a_Position;\n}\n"),o.compileShader(t);var e=o.createShader(o.FRAGMENT_SHADER);o.shaderSource(e,"precision highp float;\n\n#define OCTAVES 6\n\nuniform float m1;\nuniform float m2;\n\nuniform float iWidth;\nuniform float iHeight;\n\nuniform float r;\nuniform float g;\nuniform float b;\n\nfloat radius=8.0;\n\nvec3 rgb=vec3(r,g,b);\n\nvec2 u_CanvasSize = vec2(iWidth, iHeight);\nvec2 center = u_CanvasSize / 2.0;\nfloat len1 = length(center);\nfloat pi = acos(-1.0);\n\n//渐变\nfloat texture1(float x) {\n  float a = x / u_CanvasSize.x;\n  float b = radians(360.0) * 0.5 * a+1.0;\n  return (sin(b) + 1.0) / 2.0;\n}\n\n//水平拉丝\nfloat texture2(vec2 v) {\n  vec2 a = vec2(0.2222, 0.4444);\n  float n = dot(v, a);\n  return fract(tan(n));\n}\n\n//杂色\nfloat texture3(vec2 v) {\n  vec2 a = vec2(0.1234, 0.5678);\n  float n = dot(v, a);\n  return fract(tan(n) * 10000.0);\n}\n\n\n\n\nvoid main() {\n  //极坐标系转二维直角坐标系\n  //渐变\n  float f1 = texture1(gl_FragCoord.x*cos(1.)-gl_FragCoord.y*sin(1.));\n  f1 = 0.65 * f1 + 0.35;\n\n  //拉丝\n  float f2 = texture2(gl_FragCoord.xy);\n  f2 = f2*0.3+0.5;\n\n  //杂色\n  float f3 = texture3(gl_FragCoord.xy);\n\n  //复合颜色\n  float f = f1*f2;\n  vec3 color=rgb * f;\n  color*=1.4;\n  gl_FragColor = vec4(color, 1);\n}\n\n"),o.compileShader(e),l=o.createProgram(),o.attachShader(l,t),o.attachShader(l,e),o.linkProgram(l),o.useProgram(l);var n=o.getAttribLocation(l,"a_PointSize");o.vertexAttrib1f(n,30);var i=o.createBuffer();o.bindBuffer(o.ARRAY_BUFFER,i);var d=new Float32Array([-1,-1,-1,1,1,1,1,-1,-1,-1]);o.bufferData(o.ARRAY_BUFFER,d,o.STATIC_DRAW);var u=o.getAttribLocation(l,"a_Position");o.vertexAttribPointer(u,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(u),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let s=o.getUniformLocation(l,"m1");o.uniform1f(s,Number(r.m1)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let c=o.getUniformLocation(l,"m2");o.uniform1f(c,Number(r.m2)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let f=o.getUniformLocation(l,"iWidth");o.uniform1f(f,Number(r.iWidth)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let h=o.getUniformLocation(l,"iHeight");o.uniform1f(h,Number(r.iHeight)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let m=o.getUniformLocation(l,"r");o.uniform1f(m,Number(r.r)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let g=o.getUniformLocation(l,"g");o.uniform1f(g,Number(r.g)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let p=o.getUniformLocation(l,"b");o.uniform1f(p,Number(r.b)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),i((()=>r.m1),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"m1");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.m2),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"m2");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iWidth),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iWidth");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iHeight),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iHeight");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.r),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"r");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.g),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"g");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.b),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"b");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),{canvas:a}},render:function(){return r("canvas",{ref:"canvas",width:this.$props.width,height:this.$props.height})}}},props:{label:{type:String,default:""},type:{type:String,default:"normal"}},setup(e){i((()=>e.r),(()=>{console.log("r",e.r)}));const n=t(!1);return{buttonWidth:t(120),buttonHeight:t(60),buttonStyle:{width:"120px",height:"60px",boxShadow:"0px 3px 4px #000",borderRadius:"8px",transform:"translateY(0px)"},buttonEnterStyle:{width:"120px",height:"60px",boxShadow:"0px 1px 4px #000",borderRadius:"8px",transform:"translateY(2px)"},color:f((()=>"primary"==e.type?{r:97/255,g:139/255,b:239/255}:"success"==e.type?{r:152/255,g:195/255,b:121/255}:"danger"==e.type?{r:224/255,g:108/255,b:117/255}:{r:.1,g:.1,b:.1})),m1:t(40),m2:t(20),enter:n}}};A.render=function(t,e,n,i,r,a){const c=o("draw"),f=o("E3Button");return l(),d("div",null,[s(f,{class:"EButton",modelValue:i.enter,"onUpdate:modelValue":e[1]||(e[1]=t=>i.enter=t),style:{position:"relative","border-radius":"8px"}},{default:u((()=>[s("div",{style:[{transform:"translateY("+(i.enter?2:0)+"px)"},{"font-family":"'verdana'","font-size":"24px",position:"absolute",width:"100%","text-align":"center","line-height":"60px",color:"rgba(255,255,255,.8)","text-shadow":"0px -1px 0px rgba(0,0,0,.6)","z-index":"2"}]},h(n.label),5),s(c,{iTime:3.14159/8,m1:i.m1,m2:i.m2,r:i.color.r,g:i.color.g,b:i.color.b,style:i.enter?i.buttonEnterStyle:i.buttonStyle,width:i.buttonWidth,height:i.buttonHeight,iWidth:i.buttonWidth,iHeight:i.buttonHeight},null,8,["iTime","m1","m2","r","g","b","style","width","height","iWidth","iHeight"])])),_:1},8,["modelValue"])])};const y={components:{E3Slider:m,E3SliderButton:g,draw:{name:"webgl-renderer",props:{width:String,height:String,indicesCount:{default:()=>5},indicesStart:{default:()=>0},iTime:{},iWidth:{},iHeight:{}},setup(r){const a=t(null);let o,l;return e((()=>{o&&l&&o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),n((()=>{o=a.value.getContext("webgl");var t=o.createShader(o.VERTEX_SHADER);o.shaderSource(t,"attribute vec4 a_Position;\nvoid main(){\n    gl_Position=a_Position;\n}\n"),o.compileShader(t);var e=o.createShader(o.FRAGMENT_SHADER);o.shaderSource(e,"precision mediump float;\n\nuniform float iTime;\nuniform float iWidth;\nuniform float iHeight;\n\nhighp float rand(vec2 co)\n{\n    /*if(int(co.x) < 50 && int(co.x) > 46  && int(co.y) < 50 && int(co.y) > 46) {\n        return 0.0;\n    } else {\n        return 1.0;\n    }*/\n    co = vec2(float(int(co.x / 0.5)), float(int(co.y / 0.5)));\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\nconst int count = 15;\n\nvec4 blur(vec2 co)\n{\n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\n    float x = co.x - iWidth / 2.;\n    float y = co.y - iHeight / 2.;\n\n    float theta = atan(co.y - iHeight / 2., co.x - iWidth / 2.);\n    float r = sqrt(x * x + y * y);\n    \n    for(int i = -count; i <= count; i++) {\n        float v1 = rand( vec2(cos(theta + float(i) / r) * r, sin(theta + float(i) / r) * r)) / (float(count) * 2.0 - 1.0);\n        color = color + vec4(v1, v1, v1, 1.0); \n    }\n    return color;\n}\n\nvec4 gradient(vec2 co)\n{\n    vec4 color = vec4(0.0, 1.0, 1.0, 1.0);\n    float x = co.x - iWidth / 2.;\n    float y = co.y - iHeight / 2.;\n    float theta = atan(co.y - iWidth / 2., co.x - iHeight / 2.);\n    theta += iTime;\n    float r = sqrt(x * x + y * y);\n    color = vec4(vec3(sin(theta * 4.0) + 3.0) / 4.0, 1.0);\n    return color;\n}\n\n\n\nvoid main(){\n    gl_FragColor = mix(gradient(gl_FragCoord.xy), blur(gl_FragCoord.xy), 0.4) ;\n}"),o.compileShader(e),l=o.createProgram(),o.attachShader(l,t),o.attachShader(l,e),o.linkProgram(l),o.useProgram(l);var n=o.getAttribLocation(l,"a_PointSize");o.vertexAttrib1f(n,30);var i=o.createBuffer();o.bindBuffer(o.ARRAY_BUFFER,i);var d=new Float32Array([-1,-1,-1,1,1,1,1,-1,-1,-1]);o.bufferData(o.ARRAY_BUFFER,d,o.STATIC_DRAW);var u=o.getAttribLocation(l,"a_Position");o.vertexAttribPointer(u,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(u),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let s=o.getUniformLocation(l,"iTime");o.uniform1f(s,Number(r.iTime)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let c=o.getUniformLocation(l,"iWidth");o.uniform1f(c,Number(r.iWidth)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount);let f=o.getUniformLocation(l,"iHeight");o.uniform1f(f,Number(r.iHeight)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)})),i((()=>r.iTime),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iTime");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iWidth),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iWidth");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),i((()=>r.iHeight),(t=>{if(!o||!l)return;let e=o.getUniformLocation(l,"iHeight");o.uniform1f(e,Number(t)),o.drawArrays(o.TRIANGLE_STRIP,r.indicesStart,r.indicesCount)}),{immediate:!0}),{canvas:a}},render:function(){return r("canvas",{ref:"canvas",width:this.$props.width,height:this.$props.height})}}},setup(){const e=t(0),n=t(80),i=t(80),r={height:"18px",margin:"0 auto",background:"linear-gradient(#333, #666)",width:"400px",borderRadius:"9px",border:"2px solid #333"},a=t(0);setInterval((()=>{a.value=Date.now()/1e4%(2*Math.PI)}),20);const o=f((()=>({background:"pink",borderRadius:"50%",overflow:"hidden",width:"40px",height:"40px",cursor:"pointer",textAlign:"center",transform:`translate(${e.value/100*400-20}px,-16px)`,boxShadow:"0px 3px 4px #000"})));return{myTime:a,buttonWidth:n,buttonHeight:i,sliderStyle:r,buttonStyle:o,value:e}}};y.render=function(t,e,n,i,r,a){const c=o("draw"),f=o("E3SliderButton"),h=o("E3Slider");return l(),d("div",null,[s(h,{style:i.sliderStyle,modelValue:i.value,"onUpdate:modelValue":e[1]||(e[1]=t=>i.value=t)},{default:u((()=>[s(f,{style:i.buttonStyle},{default:u((()=>[s(c,{iTime:i.myTime,style:{width:"40px",height:"40px"},width:"80",height:"80",iWidth:i.buttonWidth,iHeight:i.buttonHeight},null,8,["iTime","iWidth","iHeight"])])),_:1},8,["style"])])),_:1},8,["style","modelValue"])])};const R={components:{E3Slider:m,E3SliderButton:g,draw:x},setup(){const e=t(100),n=t(100),i=t(0);return{buttonStyle:f((()=>({width:e.value+"px",height:n.value+"px",position:"relative",overflow:"hidden",borderRadius:"50%",boxShadow:"0px 3px 4px #000",transform:"rotate("+Math.ceil(i.value/100*360)+"deg)",overflow:"hidden"}))),buttonWidth:e,buttonHeight:n,value:i}}},T=s("div",{style:{background:"rgba(0,0,0,.3)",top:"180px",left:"95px","border-radius":"50%",width:"10px",height:"10px",position:"absolute","z-index":"2"}},null,-1);R.render=function(t,e,n,i,r,a){const c=o("draw"),f=o("E3SliderButton"),h=o("E3Slider");return l(),d("div",null,[s(h,{modelValue:i.value,"onUpdate:modelValue":e[1]||(e[1]=t=>i.value=t)},{default:u((()=>[s(f,{style:i.buttonStyle},{default:u((()=>[T,s(c,{style:{"border-radius":"50%"},iTime:0,width:i.buttonWidth,height:i.buttonHeight,iWidth:i.buttonWidth,iHeight:i.buttonHeight},null,8,["width","height","iWidth","iHeight"])])),_:1},8,["style"])])),_:1},8,["modelValue"])])};var w=p({name:"App",components:{Switch:v,Button:A,HSlider:y,RotateSlider:R},setup(){const e=t(0),n=t(0),i=t(0);return{colorR:f((()=>e.value/255)),colorG:f((()=>n.value/255)),colorB:f((()=>i.value/255)),slideR:e,slideG:n,slideB:i}}});const _={style:{height:"1000px"}},E=b(" hi element3-core "),I=s("p",null,"switch",-1),L=s("p",null,"button",-1),C={style:{display:"flex","justify-content":"space-evenly"}},N=s("p",null,"slider 水平",-1);w.render=function(t,e,n,i,r,a){const u=o("Switch"),c=o("Button"),f=o("HSlider");return l(),d("div",_,[E,s("div",null,[s("div",null,[I,s(u)]),s("div",null,[L,s("div",C,[s(c,{type:"success",label:"success"}),s(c,{type:"danger",label:"danger"}),s(c,{type:"primary",label:"primary"})])]),s("div",null,[N,s(f)])])])};S(w).mount("#app");
